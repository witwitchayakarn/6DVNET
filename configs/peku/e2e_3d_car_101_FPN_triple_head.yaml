MODEL:
  META_ARCHITECTURE: "GeneralizedRCNN"
  WEIGHT: "/home/wit/6dvnet/output/e2e_3d_car_101_FPN_triple_head/Dec03-05-58_instance-1_step/model_0006000.pth"
#  WEIGHT: "catalog://ImageNetPretrained/MSRA/R-101"
  BACKBONE:
    CONV_BODY: "R-101-FPN"
    OUT_CHANNELS: 256
  RPN:
    USE_FPN: True
    ANCHOR_STRIDE: (4, 8, 16, 32, 64)
    PRE_NMS_TOP_N_TRAIN: 2000
    PRE_NMS_TOP_N_TEST: 1000
    POST_NMS_TOP_N_TEST: 1000
    FPN_POST_NMS_TOP_N_TEST: 1000
  ROI_HEADS:
    USE_FPN: True
  ROI_BOX_HEAD:
    NUM_CLASSES: 2
    POOLER_RESOLUTION: 7
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    POOLER_SAMPLING_RATIO: 2
    FEATURE_EXTRACTOR: "FPN2MLPFeatureExtractor"
    PREDICTOR: "FPNPredictor"
  ROI_MASK_HEAD:
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    FEATURE_EXTRACTOR: "MaskRCNNFPNFeatureExtractor"
    PREDICTOR: "MaskRCNNC4Predictor"
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 2
    RESOLUTION: 14
    SHARE_BOX_FEATURE_EXTRACTOR: False
  ROI_CAR_CLS_ROT_HEAD:
    FEATURE_EXTRACTOR: "FPN2MLP2FeatureExtractor"
    POOLER_RESOLUTION: 7
    POOLER_SCALES: (0.25, 0.125, 0.0625, 0.03125)
    POOLER_SAMPLING_RATIO: 2
    MLP_HEAD_DIM: 1024
    PREDICTOR: "FPNPredictor"
    NUMBER_CARS: 34
    SUBCLASS_NAME: "car_cat_classes"
    NUMBER_ROTS: 4 # we use quaternions
    ROT_NAME: "quaternions"
    SHARE_BOX_FEATURE_EXTRACTOR: False
    ROT_LOSS: "L1"
    CE_CAR_CLS_FINETUNE_WIGHT: [1.2, 3.74, 12.03, 5.08, 6.69, 11.7, 20.25, 0.37, 14.32, 14.24, 84.02, 14.78, 9.46,
    13.62, 1.51, 9.96, 43.84, 1.83, 4.65, 6.62, 11.54, 0.6, 6.73, 29.48, 7.82, 5.55, 12.36, 25.85, 8.63, 6.49, 4.13,
    2.6, 6.3, 10.84]
    UNIQUE_CAR_MODELS: [2, 6, 7, 8, 9, 12, 14, 16, 18, 19, 20, 23, 25, 27, 28, 31, 32, 35, 37, 40, 43, 46, 47, 48, 50, 51, 54, 56, 60, 61, 66, 70, 71, 76]
    QUATERNION_HEMISPHERE: True
    SUBCAT_LOSS_BETA: 0.1 # Because we multiply the ce_weight
    ROT_LOSS_BETA: 1.0
    ROT_DIFF_DEGREE: True
  TRANS_HEAD:
    FEATURE_EXTRACTOR: "MLPFeatureExtractor"
    PREDICTOR: "MLPCONCATPredictor"
    MLP_HEAD_DIM: 100
    INPUT_DIM: 4
    OUTPUT_DIM: 3
    TRANS_LOSS: "HUBER"
    TRANS_HUBER_THRESHOLD: 2.8
    CAMERA_INTRINSIC: (2304.54786556982, 2305.875668062, 1686.23787612802, 1354.98486439791)
    TRANS_LOSS_BETA: 0.05
  MASK_ON: True
  CAR_CLS_HEAD_ON: True
  TRANS_HEAD_ON: True

DATASETS:
  TRAIN: ("peku_3d_car_train", "peku_3d_car_val")
#  TEST: ("peku_3d_car_val", "peku_3d_car_test")
  TEST: ("peku_3d_car_test",)

INPUT:
  BOTTOM_HALF: True
#  MIN_SIZE_TRAIN_RANGE: (700, 900)  # (1200, 2710)  2710 is TOO BIG! # if g half is true
#  MAX_SIZE_TRAIN: 3384
  MIN_SIZE_TRAIN: 900
  MAX_SIZE_TRAIN: 3384
  MIN_SIZE_TEST: 900
  MAX_SIZE_TEST: 3384
#  PIXEL_MEAN: [0.40384353, 0.45469216, 0.48145765]
#  TO_BGR255: False

DATALOADER:
  SIZE_DIVISIBILITY: 32
  NUM_WORKERS: 8

SOLVER:
  WEIGHT_DECAY: 0.0001
  STEPS: (40000, 80000)
  MAX_ITER: 100000
  #https://github.com/facebookresearch/Detectron/blob/master/configs/getting_started/tutorial_1gpu_e2e_faster_rcnn_R-50-FPN.yaml#L14-L30
  IMS_PER_BATCH: 3
  BASE_LR: 0.005
  KEEP_LR: True
  CHECKPOINT_PERIOD: 1000
  UNFREEZE_CONV_BODY: True  # Backprop all the way!

#TRAIN:
#  # If we load the pre-trained weight from MSCOCO
#  IGNORE_LIST: ['roi_heads.box.predictor.cls_score.weight', 'roi_heads.box.predictor.cls_score.bias',
#   'roi_heads.box.predictor.bbox_pred.weight', 'roi_heads.box.predictor.bbox_pred.bias',
#   'roi_heads.mask.predictor.mask_fcn_logits.weight', 'roi_heads.mask.predictor.mask_fcn_logits.bias']
TEST:
  WRITE_TO_JSON: False
  IMS_PER_BATCH : 1
  SCORE_THRESH_FOR_TRUTH_DETECTION: 0.5
